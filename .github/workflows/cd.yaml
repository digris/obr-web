name: CD

on: [push]

jobs:

  preflight-fe:
    runs-on: ubuntu-latest
    name: Frontend preflight

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install -g yarn
      - run: yarn install --dev
      - run: yarn lint

  preflight-be:
    runs-on: ubuntu-latest
    name: Backend preflight

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - run: pip install black
      - run: black --version
      - run: black ./core/ --check
      - run: pip install poetry==1.1.13
      - run: poetry export --without-hashes --dev -f requirements.txt | pip install -r /dev/stdin
#      - run: prospector -p ./core/

  test-be:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    name: Backend tests (python ${{ matrix.python-version }})
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
#          python-version: '3.9'
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - run: pip install poetry==1.1.13
      - run: poetry export --without-hashes --dev -f requirements.txt | pip install -r /dev/stdin
      - run: make test-be

  test-fe:
    runs-on: ubuntu-latest
    name: Frontend tests

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install -g yarn
      - run: yarn install --dev
      - run: yarn test:unit

  test-e2e:
    runs-on: ubuntu-latest
    name: E2E tests

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - run: npm install -g yarn
      - run: yarn install
      - run: yarn build
      - run: pip install poetry==1.1.13
      - run: poetry export --without-hashes --dev -f requirements.txt | pip install -r /dev/stdin
      - run: make test-e2e
      - uses: actions/upload-artifact@v3
        with:
          name: e2e-test-screenshots
          path: screenshots


  deploy:
    needs: [preflight-fe, preflight-be, test-be, test-fe, test-e2e]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Set up GCP SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Checkout
        uses: actions/checkout@v3
      - name: Submit to cloudbuild
        run: gcloud builds submit --async
