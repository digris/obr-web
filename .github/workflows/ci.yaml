name: CI

on: [push]

jobs:
  preflight-fe:
    runs-on: ubuntu-latest
    name: Frontend preflight

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install -g yarn
      - run: yarn install --dev
      - run: yarn lint

  preflight-be:
    runs-on: ubuntu-latest
    name: Backend preflight

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - run: pip install black
      - run: black --version
      - run: black ./core/ --check
      - run: pip install poetry==1.1.13
      - run: poetry export --without-hashes --dev -f requirements.txt | pip install -r /dev/stdin
#      - run: prospector -p ./core/

  test-be:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
    name: Backend tests (python ${{ matrix.python-version }})
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
#          python-version: '3.9'
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
      - run: pip install poetry==1.1.13
      - run: poetry export --without-hashes --dev -f requirements.txt | pip install -r /dev/stdin
      - run: make test-be

  test-fe:
    runs-on: ubuntu-latest
    name: Frontend tests

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install -g yarn
      - run: yarn install --dev
      - run: yarn test:unit

  test-e2e:
    runs-on: ubuntu-latest
    name: E2E tests

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          architecture: 'x64'
      - run: npm install -g yarn
      - run: yarn install
      - run: yarn build
      - run: pip install poetry==1.1.13
      - run: poetry export --without-hashes --dev -f requirements.txt | pip install -r /dev/stdin
      - run: make test-e2e
      - uses: actions/upload-artifact@v3
        with:
          name: e2e-test-screenshots
          path: screenshots

  release:
#    needs: [preflight-fe, preflight-be, test-be, test-fe, test-e2e]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    steps:
      # https://mestrak.com/blog/semantic-release-with-python-poetry-github-actions-20nn
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - uses: actions/checkout@v3
      - name: Semantic release
        run: |
          pip install python-semantic-release
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch --all
          git tag -l
          semantic-release publish -v DEBUG
