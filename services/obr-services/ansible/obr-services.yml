---

# to run without inventory file (note the comma!):
# ansible-playbook -i 34.65.201.172, ansible/obr-services.yml

- name: obr-services
  hosts: 34.65.201.172
  remote_user: "{{ lookup('env', 'GCP_SSH_USER') }}"
  become: true
  gather_facts: yes
  environment:
    LC_ALL: en_US.UTF-8
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tasks:

    ###################################################################
    # system
    ###################################################################
    - name: install base packages
      tags: system
      ansible.builtin.apt:
        pkg: [
          acl,
          git,
          htop,
          locales,
          net-tools,
          direnv,
          fuse,
          python3-pip,
        ]
        state: present

    - name: install poetry
      ansible.builtin.shell:
        cmd: curl -sSL https://install.python-poetry.org | python3 -
        creates: ~/.local/bin/poetry
      become: yes
      become_user: obr

    - name: add group "obr"
      tags: system
      ansible.builtin.group:
        name: obr
        state: present

    - name: ddd user "obr"
      tags: system
      ansible.builtin.user:
        name: obr
        group: obr

    - name: add /opt
      tags: system
      ansible.builtin.file:
        path: /opt
        state: directory

    - name: add /opt/obr-web
      tags: system
      ansible.builtin.file:
        path: /opt
        state: directory
        owner: obr
        group: obr

    - name: configure direnv
      tags: system
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: 'eval "$(direnv hook bash)"'
        create: yes
        state: present
      become: yes
      become_user: obr

    ###################################################################
    # cloud sql proxy
    ###################################################################
    - name: add /cloudsql
      tags: cloudsql
      ansible.builtin.file:
        path: /cloudsql
        state: directory

    - name: download cloud_sql_proxy
      ansible.builtin.get_url:
        url: https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.0.0/cloud-sql-proxy.linux.amd64
        dest: /usr/local/bin/cloud-sql-proxy
        mode: '0755'

    - name: create sql proxy systemd service
      tags: cloudsql
      ansible.builtin.copy:
        dest: /etc/systemd/system/cloud-sql-proxy.service
        content: |
          [Unit]
          Description=Cloud SQL Proxy
          After=network.target
  
          [Service]
          Type=simple
          ExecStart=/usr/local/bin/cloud-sql-proxy --fuse /cloudsql open-broadcast:europe-west6:open-broadcast-db
          Restart=always
          LimitNOFILE=4096
  
          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: reload systemd
      tags: cloudsql
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: enable sql proxy systemd service
      tags: cloudsql
      ansible.builtin.systemd:
        name: cloud-sql-proxy
        enabled: yes

    - name: start sql proxy systemd service
      tags: cloudsql
      ansible.builtin.systemd:
        name: cloud-sql-proxy
        state: started

    ###################################################################
    # repo & co
    ###################################################################
    - name: clone repository
      tags: repo
      ansible.builtin.git:
        repo: https://github.com/digris/obr-web.git
        version: main
        dest: /opt/obr-web
        force: yes
      environment:
        GIT_TERMINAL_PROMPT: 0
      become: yes
      become_user: obr
      register: repo_clone

    - name: configure poetry
      tags: repo
      ansible.builtin.command: "~/.local/bin/poetry config virtualenvs.in-project true --local"
      args:
        chdir: /opt/obr-web
      become: yes
      become_user: obr
      changed_when: false

    - name: install python dependencies
#      ansible.builtin.command: "~/.local/bin/poetry install --without dev --sync"
      ansible.builtin.command: "~/.local/bin/poetry install --sync"
      args:
        chdir: /opt/obr-web
      become: yes
      become_user: obr
      register: poetry_install
      changed_when: "'No dependencies to install or update' not in poetry_install.stdout"